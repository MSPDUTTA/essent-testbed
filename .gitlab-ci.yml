image: socks.lbl.gov:4567/sbeamer/essent-testbed:gcc7-pk
test:
  stage: test
  variables:
    SBT_CACHE_DIR: "sbt-cache/.ivy/cache"
    SBT_OPTS: "-Dsbt.ivy.home=$SBT_CACHE_DIR"
  before_script:
    ## Get access to internal subrepos via private key
    # Install ssh-agent if not already installed, it is required by Docker.
    # (change apt-get to yum if you use an RPM-based image)
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    # Run ssh-agent (inside the build environment)
    - eval $(ssh-agent -s)
    # Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    # Create the SSH directory and give it the right permissions
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    # Make host checking easier
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
    # Update submodules
    - git submodule update --init
    ## Set up sbt
    # Set up nested cache dir
    - mkdir -pv $SBT_CACHE_DIR
    - echo $SBT_OPTS
    # Make sbt pull things in
    - cd essent
    - sbt sbtVersion
    - cd ..
    # Setup RISCV (image already has fesvr)
    # - export RISCV=/riscv
    - cp /riscv rocket/
    # Make alias with for g++
    - ln -s /usr/bin/g++-7 /usr/bin/g++
  script:
    # test basics
    - sbt 'run all'
    # test rocket
    - cd rocket
    - rm -f TestHarness.h emulator
    - time CXX=g++-7 make emulator
    - time ./emulator +cycle-count ./dhrystone.riscv
    - time ./emulator +cycle-count +max-cycles=2000000 $RISCV/riscv64-unknown-elf/bin/pk /hello
  cache:
    untracked: true
    paths:
      - $SBT_CACHE_DIR
